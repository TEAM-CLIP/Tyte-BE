name: Deploy

on:
  push:
    branches:
      - develop

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant Execute Permission For Gradlew
        run: chmod +x gradlew

      - name: Build With Gradle
        run: |
          ./gradlew build

      - name: Configure AWS credentials for ECR and Secrets Manager
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ap-northeast-2
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push Docker image
        env:
          ECR_REPOSITORY_URI: ${{ secrets.ECR_REPOSITORY_URI }}
        run: |
          docker build -t ${{ secrets.ECR_REPOSITORY_NAME }} -f .deploy/Dockerfile-dev .
          docker tag ${{ secrets.ECR_REPOSITORY_NAME }}:latest ${{ secrets.ECR_REPOSITORY_URI }}
          docker push ${{ secrets.ECR_REPOSITORY_URI }}

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
            export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws secretsmanager get-secret-value \
            --region ap-northeast-2 \
            --secret-id ${{ secrets.SECRET_NAME }} \
            --query 'SecretString' \
            --output text | \
            jq -r 'to_entries|map("\(.key)=\(.value|tostring)")|.[]' > secrets.env
            
            docker pull ${{ secrets.ECR_REPOSITORY_URI }}
            
            if [ "$(docker ps -q -f name=${{secrets.CONTAINER_NAME}})" ]; then
            docker stop ${{secrets.CONTAINER_NAME}} && docker rm ${{secrets.CONTAINER_NAME}}
            fi
            
            docker system prune -f
            
            docker run -d --name ${{secrets.CONTAINER_NAME}} \
            --env-file ./secrets.env \
            --restart always \
            -p 80:8080 \
            ${{ secrets.ECR_REPOSITORY_URI }}
